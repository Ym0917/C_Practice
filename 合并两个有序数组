//给你两个有序整数数组 nums1 和 nums2，请你将 nums2 合并到 nums1 中，使 nums1 成为一个有序数组。
//
//初始化 nums1 和 nums2 的元素数量分别为 m 和 n 。你可以假设 nums1 的空间大小等于 m + n，这样它就有足够的空间保存来自 nums2 的元素。
//
//
//
//示例 1：
//
//输入：nums1 = [1, 2, 3, 0, 0, 0], m = 3, nums2 = [2, 5, 6], n = 3
//输出：[1, 2, 2, 3, 5, 6]
//示例 2：
//
//输入：nums1 = [1], m = 1, nums2 = [], n = 0
//输出：[1]
//
//
//提示：
//
//nums1.length == m + n
//nums2.length == n
//0 <= m, n <= 200
//1 <= m + n <= 200
//- 109 <= nums1[i], nums2[i] <= 109

int* addToArrayForm(int* A, int ASize, int K, int* returnSize) {
    int* res = malloc(sizeof(int) * fmax(10, ASize + 1));
    *returnSize = 0;
    for (int i = ASize - 1; i >= 0; --i) {
        int sum = A[i] + K % 10;
        K /= 10;
        if (sum >= 10) {
            K++;
            sum -= 10;
        }
        res[(*returnSize)++] = sum;
    }
    for (; K > 0; K /= 10) {
        res[(*returnSize)++] = K % 10;
    }
    for (int i = 0; i < (*returnSize) / 2; i++) {
        int tmp = res[i];
        res[i] = res[(*returnSize) - 1 - i];
        res[(*returnSize) - 1 - i] = tmp;
    }
    return res;
}
